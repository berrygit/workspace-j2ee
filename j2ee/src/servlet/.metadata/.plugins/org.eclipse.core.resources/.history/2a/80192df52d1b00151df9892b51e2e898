package composite_pattern;

/**
 * @author berry
 */
public abstract class Component implements Iterable<Component>
{
	/**
	 * add
	 * 
	 * @param component
	 */
	public void add(Component component)
	{
		throw new UnsupportedOperationException();
	}

	/**
	 * 2015年6月25日 $ remove Component Component.java composite_pattern
	 * design_pattern void
	 *
	 * @param component
	 *            下午5:00:43 TODO berry 2015
	 * @return void
	 */
	public void remove(Component component)
	{
		throw new UnsupportedOperationException();
	}

	public Component getChild(int i)
	{
		throw new UnsupportedOperationException();
	}

	/**
	 * @return String
	 */
	/**
	 * 2015年6月25日 $ getName Component Component.java composite_pattern
	 * design_pattern String
	 *
	 * @return 下午5:00:50 TODO berry 2015
	 * @return String
	 */
	public String getName()
	{
		throw new UnsupportedOperationException();
	}

	public String getDescription()
	{
		throw new UnsupportedOperationException();
	}

	/**
	 * @return double
	 */
	/**
	 * 2015年6月25日 $ getPrice Component Component.java composite_pattern
	 * design_pattern double
	 *
	 * @return 下午5:00:55 TODO berry 2015
	 * @return double
	 */
	public double getPrice()
	{
		throw new UnsupportedOperationException();
	}

	/**
	 * 2015年6月25日 $ isVegetarain Component Component.java composite_pattern
	 * design_pattern boolean
	 *
	 * @return 下午5:00:59 TODO berry 2015
	 * @return boolean
	 */
	public boolean isVegetarain()
	{
		throw new UnsupportedOperationException();
	}

	/**
	 * 2015年6月25日 $ print Component Component.java composite_pattern
	 * design_pattern void 下午5:01:03 TODO berry 2015
	 *
	 * @return void
	 */
	public void print()
	{
		throw new UnsupportedOperationException();
	}
}
