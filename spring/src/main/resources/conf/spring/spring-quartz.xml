<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.2.xsd">

	<!-- SchedulerFactoryBean负责配置好的job的调度和执行，以triggers列表方式告知有哪些job -->
	<bean id="scheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<!-- 配置后不需要代码触发执行，而是自动执行 -->
		<property name="autoStartup" value="true" />
		<property name="triggers">
			<list>
				<ref bean="cronTrigger" />
				<ref bean="simpleTrigger" />
			</list>
		</property>
	</bean>

	<bean id="simpleTrigger"
		class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
		<property name="jobDetail" ref="jobDetail" />
		<!-- 10 seconds -->
		<property name="startDelay" value="10000" />
		<!-- repeat every 50 seconds -->
		<property name="repeatInterval" value="50000" />
	</bean>

	<bean id="cronTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<!-- jobDetail为待调度的作业的详细信息 -->
		<property name="jobDetail" ref="exampleJob" />
		<!-- cronExpression配置调度的执行时间 -->
		<property name="cronExpression" value="0 * * * * ?" />
	</bean>

	<!-- job类，不继承特定接口，使用反射指定执行方法 -->
	<bean id="jobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="exampleBusinessObject" />
		<property name="targetMethod" value="doIt" />
		<property name="concurrent" value="false" />
	</bean>

	<bean id="exampleBusinessObject" class="quartz.ExampleBusinessJob" />

	<bean id="exampleJob"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<!-- 待调度的job类，需要继承Job接口 -->
		<property name="jobClass" value="quartz.ExampleJob" />
		<!-- 作业执行时需要的一些信息 -->
		<property name="jobDataAsMap">
			<map>
				<entry key="timeout" value="5" />
			</map>
		</property>
	</bean>

	<context:component-scan base-package="quartz.custom"
		use-default-filters="false">
		<context:include-filter type="assignable"
			expression="quartz.custom.Task" />
	</context:component-scan>

	<bean id="customJobSchedulerCenter" class="quartz.custom.CustomJobSchedulerCenter"
		init-method="init" />
</beans>